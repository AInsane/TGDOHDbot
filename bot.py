import telebot
import logging
import config
import DBworker
import helpdeskAPI
import keyboards

bot = telebot.TeleBot(config.bot_token)

#######################################logging###################################
logger = telebot.logger
telebot.logger.setLevel(logging.DEBUG)

handler = logging.FileHandler(filename='loggingbot.log', encoding='utf-8')
handler.setLevel(logging.DEBUG)
formatter = logging.Formatter('%(asctime)s : %(levelname)s : %(name)s : %(message)s '
                              '(%(filename)s : %(lineno)s',
                              datefmt='(%y-%m-%d %H:%M:%S)')

handler.setFormatter(formatter)
logger.addHandler(handler)
#################################################################################


@bot.message_handler(commands=['help', 'start'])
def send_welcome(message):
    keyboard = telebot.types.InlineKeyboardMarkup()
    callback_button1 = telebot.types.InlineKeyboardButton(text='AUTH', callback_data='auth')
    callback_button2 = telebot.types.InlineKeyboardButton(text='How are you?', callback_data='how are you')
    keyboard.add(callback_button1,callback_button2)
    bot.send_message(message.chat.id,
                  '–ü—Ä–∏–≤–µ—Ç!\n'
                  '–Ø ABM inventory bot\n'
                  '–ü–æ–∫–∞ —á—Ç–æ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ email', reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —á–∞—Ç–∞ —Å –±–æ—Ç–æ–º
    if call.message:
        if call.data == 'EDIT':
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text='–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —Ç–æ–≤–∞—Ä–∞',reply_markup='some keyboard')

        elif call.data == 'auth':
            bot.send_message(chat_id=call.message.chat.id,
                             text='–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π e-mail...')
            DBworker.set_state(call.message.chat.id, config.States.S_ENTER_MAIL.value)

        elif call.data == 'how are you':
            bot.send_message(chat_id=call.message.chat.id,
                             text='I`m fine, thank`s!\n'
                                    'And you?')
            DBworker.set_state(call.message.chat.id, config.States.S_HOW_ARE_YOU.value)

@bot.message_handler(func=lambda message: DBworker.get_current_state(message.chat.id) == config.States.S_ENTER_MAIL.value)
def ifmail(message):

    if not message.entities == None: # 'entities' - –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –µ—Å–ª–∏ –≤–≤–µ–ª–∏ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç  (—Å—É–∂–∞–µ–º –∫—Ä—É–≥ –ø—Ä–æ–≤–µ—Ä–∫–∏)
        bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ, –ø—Ä–æ–≤–µ—Ä—è—é")

        if helpdeskAPI.get_all_mails(message.text) == False:
            bot.send_message(message.chat.id, "–ü–æ—á—Ç–∞\n%s\n–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞, –¢–µ–ø–µ—Ä—å —Ä–∞—Å—à–∞—Ä—å –º–Ω–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞)" % message.text)
            DBworker.set_state(message.chat.id, config.States.S_MAIL_AUTH_TRUE.value)

        else:
            bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–æ–π –ø–æ—á—Ç–æ–π –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ!\n"
                                              "–ü—Ä–æ–≤–µ—Ä—å –ø–æ—á—Ç—É –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑üòã")

            DBworker.set_state(message.chat.id, config.States.S_ENTER_MAIL.value)

    else:
        bot.send_message(message.chat.id,"–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ —ç—Ç–æ –Ω–µ –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ –±—É–¥—å)\n"
                                         "–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑–æ–∫)")

@bot.message_handler(func=lambda message: DBworker.get_current_state(message.chat.id) == config.States.S_START.value)
def send_welcome(message):
    bot.send_message(message.chat.id,
                  '–ü—Ä–∏–≤–µ—Ç!\n'
                  '–Ø ABM inventory bot\n'
                  '–ü–æ–∫–∞ —á—Ç–æ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ email', reply_markup=keyboards.startboard())

@bot.message_handler(func=lambda message: DBworker.get_current_state(message.chat.id) == config.States.S_MAIL_AUTH_TRUE.value)
def mail_auth_true(message):
    bot.send_message(message.chat.id, "–ö—Ä—É—Ç–æ, —Ç–µ–ø–µ—Ä—å —Ä–∞—Å—à–∞—Ä—å –º–Ω–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª)")

@bot.message_handler(func=lambda message: DBworker.get_current_state(message.chat.id) == config.States.S_HOW_ARE_YOU.value)
def dialog(message):
    bot.send_message(message.chat.id, "–ü—Ä–æ—Å—Ç–∏, —è –±—ã —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–≥–æ–≤–æ—Ä–∏–ª —Å —Ç–æ–±–æ–π, –Ω–æ —É –º–µ–Ω—è —Å—Ä–æ—á–Ω—ã–µ –¥–µ–ª–∞...\n"
                                      "–î–æ —Å–∫–æ—Ä–æ–≥–æ!\n"
                                      "–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω—É–∂–Ω–æ - –¥–∞–π –º–Ω–µ –∑–Ω–∞—Ç—å)",reply_markup=keyboards.startboard())

if __name__ == '__main__':
    bot.polling(none_stop=True, interval=1)

